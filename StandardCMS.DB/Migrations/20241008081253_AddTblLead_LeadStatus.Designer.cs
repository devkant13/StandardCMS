// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StandardCMS.DB;

#nullable disable

namespace StandardCMS.DB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241008081253_AddTblLead_LeadStatus")]
    partial class AddTblLead_LeadStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StandardCMS.DB.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentId"));

                    b.Property<bool>("IsAgentActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentAgentId")
                        .HasColumnType("int");

                    b.HasKey("AgentId");

                    b.HasIndex("ParentAgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Commission", b =>
                {
                    b.Property<int>("CommissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommissionId"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("DateIssued")
                        .HasColumnType("datetime2");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("CommissionId");

                    b.HasIndex("AgentId");

                    b.HasIndex("SaleId");

                    b.ToTable("Commissions");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.CommissionRule", b =>
                {
                    b.Property<int>("CommissionRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommissionRuleId"));

                    b.Property<int>("AgentLevel")
                        .HasColumnType("int");

                    b.Property<decimal>("CommissionPercentage")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("SaleAmount")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("CommissionRuleId");

                    b.ToTable("CommissionRules");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HtmlContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubMenuId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Lead", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LeadDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LeadPrice")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("LeadUpdates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlotNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("LeadId");

                    b.HasIndex("StatusId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.LeadStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LeadStatuses");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaleAmount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SaleId");

                    b.HasIndex("AgentId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.SubMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("SubMenus");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Agent", b =>
                {
                    b.HasOne("StandardCMS.DB.Models.Agent", "ParentAgent")
                        .WithMany("ChildAgents")
                        .HasForeignKey("ParentAgentId");

                    b.Navigation("ParentAgent");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Commission", b =>
                {
                    b.HasOne("StandardCMS.DB.Models.Agent", "Agent")
                        .WithMany("Commissions")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StandardCMS.DB.Models.Sale", "Sale")
                        .WithMany("Commissions")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Content", b =>
                {
                    b.HasOne("StandardCMS.DB.Models.SubMenu", "SubMenu")
                        .WithMany("Contents")
                        .HasForeignKey("SubMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubMenu");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Lead", b =>
                {
                    b.HasOne("StandardCMS.DB.Models.LeadStatus", "LeadStatus")
                        .WithMany("Leads")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LeadStatus");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Sale", b =>
                {
                    b.HasOne("StandardCMS.DB.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.SubMenu", b =>
                {
                    b.HasOne("StandardCMS.DB.Models.Menu", "Menu")
                        .WithMany("SubMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Agent", b =>
                {
                    b.Navigation("ChildAgents");

                    b.Navigation("Commissions");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.LeadStatus", b =>
                {
                    b.Navigation("Leads");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Menu", b =>
                {
                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.Sale", b =>
                {
                    b.Navigation("Commissions");
                });

            modelBuilder.Entity("StandardCMS.DB.Models.SubMenu", b =>
                {
                    b.Navigation("Contents");
                });
#pragma warning restore 612, 618
        }
    }
}
